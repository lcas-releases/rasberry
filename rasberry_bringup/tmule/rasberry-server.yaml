---
init_cmd: |
  #exec /bin/bash
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }

  # source ROS
  source "/opt/ros/kinetic/setup.bash"
  # search for VPN tun device:
  default_iface=`route -n | grep "^10.8" | tr -s " " |  cut -f8 -d" " || echo lo`
  default_ip=`ip addr show dev "$default_iface" | grep "inet " | sed 's@ *inet \([0-9\.]*\).*@\1@' || echo 127.0.0.1`
  
  # load robot-specific config file
  if [ -r "$HOME/.rasberryrc" ]; then echo "*** loading $HOME/.rasberryrc" ; source "$HOME/.rasberryrc"; fi
  
  export_default BASE_CONFIG_DIR `readlink -f . || echo .`
  export_default ROBOT_NAME `hostname | tr "-" "_" | tr "." "_"`
  export_default SCENARIO_NAME "default"
  # load robot-specific config file
  if [ -r "$BASE_CONFIG_DIR/$ROBOT_NAME.sh" ]; then echo "*** loading $BASE_CONFIG_DIR/$ROBOT_NAME.sh" ; source "$BASE_CONFIG_DIR/$ROBOT_NAME.sh"; fi
  # load scenario-specific config file
  if [ -r "$BASE_CONFIG_DIR/$SCENARIO_NAME.sh" ]; then echo "*** loading $BASE_CONFIG_DIR/$SCENARIO_NAME.sh" ; source "$BASE_CONFIG_DIR/$SCENARIO_NAME.sh"; fi  # configure the development workspace (assuming we are in rasberry_bringup/tmule)
  export_default CATKIN_WORKSPACE "`readlink -f ../../../.. || echo $HOME/rasberry_ws`"
  source "$CATKIN_WORKSPACE/devel/setup.bash"
  # set ROS_MASTER to the correct IP
  export_default ROS_MASTER $default_ip
  # set ROS_IP not to the IP that we will connect to remotely
  export_default ROS_IP `ip route get $ROS_MASTER | grep "src" | sed 's/.*src \([0-9\.]*\).*/\1/' || echo $ROS_MASTER`
  # set ROS_HOSTNAME to the ROS_IP to avoid configuring /etc/hosts for anyone who connects
  export_default ROS_HOSTNAME "$ROS_IP"
  # path where to expect MONGODB
  export_default MONGO_PATH "$HOME/mongodb"
  # use IMU?
  export_default USE_IMU true
  # the topomap to be used
  export_default TMAP norway_poles
  # the gridmap to be used (key in mongodb)
  export_default MAP "$(rospack find rasberry_navigation)/maps/norway_poles.yaml"
  # figure out the robot number from the hostname, assuming it is like `thorvald-XXX`
  export_default ROBOT_NO `hostname | cut -f2 -d"-"`
  # set the robot type
  export_default ROBOT_TYPE "thorvald_ii_4wd4ws_slim"
  export ROS_MASTER_URI="http://$ROS_MASTER:11311/"
  export_default ROSBRIDGE_IP "10.8.0.4"
  export_default ROSBRIDGE_PORT "9090"
windows:
- name: init
  panes:
  - roscore
  - sleep 3; mkdir -p "$MONGO_PATH" && roslaunch mongodb_store mongodb_store.launch db_path:=$MONGO_PATH
- name: topo_map
  panes:
  - roslaunch rasberry_navigation topological_map_manager_central.launch map:=$TMAP
#- name: 2D_map
#  panes:
#  - roslaunch rasberry_move_base map_server.launch map:=$MAP
- name: people
  panes:
  - rosrun rasberry_people_perception simple_marvel_localiser.py
- name: callarobot
  panes:
  - WEBSOCKET_URL='wss://lcas.lincoln.ac.uk/car/ws' python $(rospack find rasberry_coordination)/callarobot/ws_client.py
  - rosrun rasberry_coordination simple_task_executor_node.py $(rospack find rasberry_coordination)/config/map_config_$SCENARIO_NAME.yaml
- name: coordination_server
  panes:
  - roslaunch rasberry_coordination coordination.launch
- name: debug
  panes:
  - ls
